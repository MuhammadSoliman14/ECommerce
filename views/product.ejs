<%- include('../partials/header', { title: 'Product Management' }) %>
<main>
    <h2>Product Management</h2>
    <p>Here you can add, update, and delete product listings.</p>

    <!-- Form for adding a new product -->
    <form id="addProductForm">
        <h3>Add New Product</h3>
        <div>
            <label for="productName">Product Name:</label>
            <input type="text" id="productName" name="productName" required>
        </div>
        <div>
            <label for="productCategory">Category:</label>
            <input type="text" id="productCategory" name="productCategory" required>
        </div>
        <div>
            <label for="productPrice">Price:</label>
            <input type="number" id="productPrice" name="productPrice" required>
        </div>
        <button type="submit">Add Product</button>
    </form>

    <!-- Table to display existing products -->
    <h3>Existing Products</h3>
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>Category</th>
                <th>Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="productList">
            <!-- Product data will be dynamically populated here -->
        </tbody>
    </table>
</main>

<!-- Include footer partial -->
<%- include('../partials/footer') %>

<!-- Add additional JavaScript logic for product management -->
<script>
    // Fetch and display existing products
    window.addEventListener('DOMContentLoaded', () => {
        fetch('/products')
            .then(response => response.json())
            .then(products => {
                const productList = document.getElementById('productList');
                productList.innerHTML = '';

                products.forEach(product => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${product.name}</td>
                        <td>${product.category}</td>
                        <td>${product.price}</td>
                        <td>
                            <button onclick="editProduct(${product.id})">Edit</button>
                            <button onclick="deleteProduct(${product.id})">Delete</button>
                        </td>
                    `;
                    productList.appendChild(row);
                });
            })
            .catch(error => console.error('Error fetching products:', error));
    });

    // Function to handle form submission for adding a new product
    document.getElementById('addProductForm').addEventListener('submit', event => {
        event.preventDefault();

        const productName = document.getElementById('productName').value;
        const productCategory = document.getElementById('productCategory').value;
        const productPrice = document.getElementById('productPrice').value;

        fetch('/products', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                name: productName,
                category: productCategory,
                price: productPrice
            })
        })
        .then(response => response.json())
        .then(newProduct => {
            // Add the new product to the product list
            const productList = document.getElementById('productList');
            const newRow = document.createElement('tr');
            newRow.innerHTML = `
                <td>${newProduct.name}</td>
                <td>${newProduct.category}</td>
                <td>${newProduct.price}</td>
                <td>
                    <button onclick="editProduct(${newProduct.id})">Edit</button>
                    <button onclick="deleteProduct(${newProduct.id})">Delete</button>
                </td>
            `;
            productList.appendChild(newRow);

            // Reset the form fields
            document.getElementById('productName').value = '';
            document.getElementById('productCategory').value = '';
            document.getElementById('productPrice').value = '';

            // Show success message or handle as needed
        })
        .catch(error => console.error('Error adding product:', error));
    });

    // Function to handle editing a product
    function editProduct(productId) {
        // Implement logic to edit a product
        console.log('Editing product:', productId);
    }

    // Function to handle deleting a product
    function deleteProduct(productId) {
        // Implement logic to delete a product
        console.log('Deleting product:', productId);
    }
</script>
